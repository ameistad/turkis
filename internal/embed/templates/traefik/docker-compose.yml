services:
  traefik:
    image: traefik:v3.3
    container_name: turkis-traefik
    command:
      # Enable Docker as a provider for Traefik and expose containers explicitly labeled traefik enabled.
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"

      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.ping.address=:8080"

      - "--certificatesresolvers.letsencrypt.acme.email={{ .Traefik.Email }}"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"

      # Disable Traefik's API/dashboard.
      - "--api.dashboard=false"

      # Enable ping endpoint for healthcheck
      - "--ping=true"
      - "--ping.entrypoint=ping"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"  # For the ping endpoint
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt:/letsencrypt"
    networks:
      - {{ .Traefik.DockerNetwork }}
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:8080/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    labels:
      # Catch-all on HTTP (port 80)
      - "traefik.http.routers.catchall-http.rule=HostRegexp(`{any:.*}`)"
      - "traefik.http.routers.catchall-http.entrypoints=web"
      - "traefik.http.routers.catchall-http.priority=1"
      - "traefik.http.routers.catchall-http.service=noop@internal"

      # Catch-all on HTTPS (port 443)
      - "traefik.http.routers.catchall-https.rule=HostRegexp(`{any:.*}`)"
      - "traefik.http.routers.catchall-https.entrypoints=websecure"
      - "traefik.http.routers.catchall-https.priority=1"
      - "traefik.http.routers.catchall-https.service=noop@internal"

volumes:
  letsencrypt:

networks:
  {{ .Traefik.DockerNetwork }}:
    name: {{ .Traefik.DockerNetwork }}
