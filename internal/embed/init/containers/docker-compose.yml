services:
  haproxy:
    image: haproxy:3.1.5
    labels:
      - "turkis.ignore=true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./haproxy-config:/usr/local/etc/haproxy/config:ro
      - ./cert-storage:/usr/local/etc/haproxy/certs:ro
      - webroot-storage:/var/www/lego:rw
      - haproxy-socket:/var/run/haproxy:rw
      - ./entrypoint.sh:/entrypoint.sh:ro
    entrypoint: ["/bin/sh", "/entrypoint.sh"]
    # Add user root to ensure proper socket permissions
    user: root
    networks:
      - turkis-network

  monitor:
    image: ghcr.io/ameistad/turkis-monitor:latest
    labels:
      - "turkis.ignore=true"
    container_name: monitor
    # Add group_add to allow Docker socket access for the golang docker client.
    group_add:
      - "${DOCKER_GID:-999}"  # Default to 999 if not set
    volumes:
      - ./haproxy-config:/haproxy-config:rw
      - ./cert-storage:/cert-storage:rw
      # Enable Docker socket access for the golang docker client
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - webroot-storage:/var/www/lego:rw
      - haproxy-socket:/var/run/haproxy:rw
    ports:
      - "127.0.0.1:8080:80"
    environment:
      # Set to true to use staging server for testing (for Let's Encrypt)
      - LEGO_STAGING=${LEGO_STAGING:-false}
    # Set user to root to ensure proper permissions for certificate directories
    user: root
    networks:
      - turkis-network
    depends_on:
      - haproxy

networks:
  turkis-network:
    name: turkis-public
    external: true

volumes:
  webroot-storage:
  haproxy-socket:
